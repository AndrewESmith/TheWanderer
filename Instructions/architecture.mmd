graph TD
  A["src/index.tsx"] --> B["src/App.tsx (App)"]
  B --> C["AudioProvider (audio/context/audio-context.tsx)"]
  C --> D["AudioInitialization (audio/components/audio-initialization.tsx)"]
  D --> E["GameComponent (in App.tsx)"]
  E --> F["createGameState() (GameState.ts)"]
  F --> F1["GameStateData"]
  F --> O["maze.ts (ICONS, CELL, initialMaze, getPlayerPosition)"]
  F --> K["BoulderStateManager (physics/boulder-state-manager.ts)"]
  F --> L["MovementConstraint (physics/movement-constraint-system.ts)"]
  F --> M["MazeLevelManager (levels/maze-level-manager.ts)"]
  F --> N["LevelProgressionHandler (levels/level-progression-handler.ts)"]
  E --> H["Input handling (keydown, W/A/S/D)"]
  E --> I["Rendering (maze grid, cells, CSS)"]
  I --> I1["maze.css / App.css"]
  E --> J["HUD & UI Components"]
  J --> J1["HowToPlayPopup (components/how-to-play)"]
  J --> J2["AudioControl"]
  J --> J3["AudioErrorDisplay"]
  J --> J4["AudioDebug"]
  E --> P["Audio events"]
  P --> Q["SoundEventEmitter (audio/events)"]
  P --> R["GameEndSoundManager (audio/events)"]
  F --> S["physics-engine.ts"]
  S --> S1["simulatePhysicsStepWithState()"]
  S --> S2["simulatePhysicsStep()"]
  K --> K1["updateBoulderPositions()/Movement"]
  L --> L1["updateMovementConstraints()"]

